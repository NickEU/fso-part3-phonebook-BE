{"version":3,"sources":["components/list-item.js","components/list.js","components/filter.js","components/add-item.js","components/notification.js","services/people.js","app.js","index.js"],"names":["ListItem","_ref","name","number","children","react_default","a","createElement","id","List","list","onDeleteBtnClick","itemsToRender","map","item","list_item","key","className","onClick","Filter","onChange","inputValue","value","AddItem","props","formSubmit","onNameInputChange","onNumberInputChange","newName","newNumber","onSubmit","type","Notification","_props$error","error","text","isError","cssClass","baseUrl","services_people","axios","get","then","res","data","person","post","url","concat","delete","newObject","put","timerIDs","App","_useState","useState","_useState2","Object","slicedToArray","people","setPeople","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","filterValue","setFilterValue","_useState9","_useState10","errorMsg","setErrorMsg","getPeople","dbServices","useEffect","cleanUpNewNumber","replace","showNotificationMsg","msg","length","forEach","clearTimeout","push","setTimeout","shift","notification","add_item","e","console","log","preventDefault","test","trimmedNewName","trim","alert","_loop","i","window","confirm","objectSpread","entry","catch","err","v","_ret","updateIfNeeded","newObj","target","filter","components_list","toConsumableArray","toLowerCase","indexOf","targetPerson","find","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.9921d7f0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ListItem = ({ name, number, children }) => {\r\n  return (\r\n    <li id=\"listItem\">\r\n      {name} {number} {children}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport ListItem from \"./list-item\";\r\n\r\nconst List = ({ list, onDeleteBtnClick }) => {\r\n  const itemsToRender = list.map(item => (\r\n    <ListItem key={item.name} name={item.name} number={item.number}>\r\n      <button className=\"delete-btn\" onClick={() => onDeleteBtnClick(item.id)}>\r\n        delete\r\n      </button>\r\n    </ListItem>\r\n  ));\r\n  return (\r\n    <div id=\"listContainer\">\r\n      <h2>Numbers</h2>\r\n      <ul id=\"list\">{itemsToRender}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ onChange, inputValue }) => {\r\n  return (\r\n    <div id=\"filterForm\">\r\n      <br />\r\n      <span>Filter results:</span>\r\n      <input onChange={onChange} value={inputValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst AddItem = props => {\r\n  let {\r\n    formSubmit,\r\n    onNameInputChange,\r\n    onNumberInputChange,\r\n    newName,\r\n    newNumber\r\n  } = props;\r\n  return (\r\n    <div id=\"addItemForm\">\r\n      <h4>Add a new entry:</h4>\r\n      <form onSubmit={formSubmit}>\r\n        <div>\r\n          name: <input onChange={onNameInputChange} value={newName} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={onNumberInputChange} value={newNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddItem;\r\n","import React from \"react\";\r\n\r\nconst Notification = props => {\r\n  const { text, isError } = props.error;\r\n  if (text === null) {\r\n    return null;\r\n  }\r\n  const cssClass = isError ? \"error\" : \"success\";\r\n  return <div className={cssClass}>{text}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://intense-castle-88618.herokuapp.com/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(res => res.data);\r\n};\r\n\r\nconst create = person => {\r\n  const request = axios.post(baseUrl, person);\r\n  return request.then(res => res.data);\r\n};\r\n\r\nconst deleteEntry = id => {\r\n  const url = `${baseUrl}/${id}`;\r\n  const request = axios.delete(url);\r\n  return request.then(res => res);\r\n};\r\n\r\nconst updateEntry = newObject => {\r\n  const url = `${baseUrl}/${newObject.id}`;\r\n  const request = axios.put(url, newObject);\r\n  return request.then(res => res.data);\r\n};\r\n\r\nexport default { getAll, create, deleteEntry, updateEntry };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport List from \"./components/list\";\r\nimport Filter from \"./components/filter\";\r\nimport AddItem from \"./components/add-item\";\r\nimport Notification from \"./components/notification\";\r\nimport dbServices from \"./services/people\";\r\n\r\nlet timerIDs = [];\r\n\r\nconst App = () => {\r\n  const [people, setPeople] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState({ text: null });\r\n\r\n  const getPeople = () => {\r\n    dbServices.getAll().then(data => setPeople(data));\r\n  };\r\n\r\n  useEffect(getPeople, []);\r\n\r\n  const updateIfNeeded = trimmedNewName => {\r\n    for (let i = 0; i < people.length; i++) {\r\n      const item = people[i];\r\n      if (item.name === trimmedNewName) {\r\n        const confirm = window.confirm(\r\n          `${trimmedNewName} already exists in the phonebook. Would you like to replace the old number with the new one?`\r\n        );\r\n        if (confirm) {\r\n          dbServices\r\n            .updateEntry({ ...item, number: cleanUpNewNumber() })\r\n            .then(res => {\r\n              setPeople(\r\n                people.map(entry => (entry.id === item.id ? res : entry))\r\n              );\r\n              showNotificationMsg(`Updated info on ${item.name}`, false);\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              showNotificationMsg(\r\n                `Info on ${item.name} has already been removed from the server`,\r\n                true\r\n              );\r\n              getPeople();\r\n            });\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const cleanUpNewNumber = () => {\r\n    return newNumber.replace(/-+|\\s+/g, \"-\").replace(/^-*(.+?)-*$/g, \"$1\");\r\n    // played around with regex a bit to delete and/or trim duplicate hyphens\r\n    // and replaced whitespace with hyphens\r\n  };\r\n\r\n  const showNotificationMsg = (msg, isError) => {\r\n    if (timerIDs.length > 0) {\r\n      timerIDs.forEach(id => clearTimeout(id));\r\n      timerIDs = [];\r\n    }\r\n    setErrorMsg({ text: msg, isError });\r\n    timerIDs.push(\r\n      setTimeout(() => {\r\n        setErrorMsg({ text: null });\r\n        timerIDs.shift();\r\n      }, 5000)\r\n    );\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    console.log(\"entered form submit\");\r\n    e.preventDefault();\r\n    if (newName === \"\" || !/^[a-z ]*$/i.test(newName)) {\r\n      alert(`Please enter a valid name`);\r\n      return;\r\n    }\r\n\r\n    const trimmedNewName = newName.trim();\r\n\r\n    if (newNumber === \"\" || /[^\\d -]/.test(newNumber)) {\r\n      //any string that includes anything\r\n      //that is not a digit, a whitespace or a hypen is not a valid number\r\n      alert(`Please enter a valid phone number`);\r\n      return;\r\n    }\r\n\r\n    if (updateIfNeeded(trimmedNewName)) {\r\n      return;\r\n    }\r\n\r\n    const newObj = {\r\n      name: trimmedNewName,\r\n      number: cleanUpNewNumber()\r\n    };\r\n    dbServices.create(newObj).then(() => {\r\n      getPeople();\r\n      showNotificationMsg(`Successfully added ${newObj.name}`, false);\r\n    });\r\n\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  const handleDeleteBtnClick = id => {\r\n    const targetPerson = people.find(person => person.id === id);\r\n    if (window.confirm(`Wanna delete ${targetPerson.name}?`)) {\r\n      dbServices.deleteEntry(id).then(() => {\r\n        getPeople();\r\n        showNotificationMsg(`Successfully deleted ${targetPerson.name}`, false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNameInputChange = e => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumberInputChange = e => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const handleFilterInputChange = e => {\r\n    setFilterValue(e.target.value);\r\n  };\r\n\r\n  const filterPeople = () => {\r\n    if (filterValue === \"\") {\r\n      return people;\r\n    }\r\n    return [...people].filter(\r\n      item => item.name.toLowerCase().indexOf(filterValue.toLowerCase()) !== -1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <h2>Phonebook</h2>\r\n      <Notification error={errorMsg} />\r\n      <AddItem\r\n        formSubmit={handleFormSubmit}\r\n        onNameInputChange={handleNameInputChange}\r\n        onNumberInputChange={handleNumberInputChange}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n      />\r\n      <Filter onChange={handleFilterInputChange} inputValue={filterValue} />\r\n      <List list={filterPeople()} onDeleteBtnClick={handleDeleteBtnClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}